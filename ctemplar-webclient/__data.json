{"type":"data","nodes":[null,{"type":"data","data":[{"repoDetails":1,"readme":18,"meta":19},{"id":2,"name":3,"user":4,"url":5,"description":6,"isFork":7,"createdAt":8,"updatedAt":9,"homepage":10,"language":11,"license":12,"size":13,"stars":14,"forks":15,"issues":16,"topics":17,"archived":7,"has_pages":7},327656034,"ctemplar-webclient","Lissy93","https://github.com/Lissy93/ctemplar-webclient","Angular webclient (with Linux, macOS and Windows desktop clients) for CTemplar's encrypted email service.",true,"2021-01-07T15:47:13Z","2022-02-25T09:37:17Z","https://ctemplar.com","TypeScript","Apache-2.0",126640,2,1,8,[],"# CTemplar\n\n[![webclient-master](https://github.com/CTemplar/webclient/actions/workflows/master.yml/badge.svg?branch=master)](https://github.com/CTemplar/webclient/actions/workflows/master.yml)\n\nAngular webclient (with Linux, macOS and Windows desktop clients) for CTemplar's encrypted email service.\n\n## Usage\n\n### Development server\n\nRun `ng serve` for a dev server. Navigate to `http://localhost:4200/`. The app will automatically reload if you change any of the source files.\n\n### Build\n\nRun `ng build` to build the project. The build artifacts will be stored in the `dist/` directory. Use the `-prod` flag for a production build.\n\n### Build cross-platform Electron client\n\n```bash\nnpm run build:electron\nnpm run pack -- --\u003Cplatform> --\u003Carch>\n```\n\nExamples:\n\n```bash\n# Windows x64\nnpm run build:electron\nnpm run pack:electron -- --windows --x64\n```\n\nOR\n\n```bash\n# macOS x64\nnpm run build:electron\nnpm run pack:electron -- --macos --x64\n```\n\nOR\n\n```bash\n# Linux x64\nnpm run build:electron\nnpm run pack:electron -- --linux --x64\n```\n\nOR\n\n```bash\n# Linux arm64\nnpm run build:electron\nnpm run pack:electron -- --linux --arm64\n```\n\nThen you can look for the executable in the new `release/` directory.\n\nFor more information, execute `npm run pack:electron -- --help` or visit [electron-builder documentation](https://github.com/electron-userland/electron-builder).\n\n### Troubleshooting\n\nIf you get the following error when running on Linux:\n\n`[10777:1211/040811.848719:FATAL:setuid_sandbox_host.cc(158)] The SUID sandbox helper binary was found, but is not configured correctly. Rather than run without sandboxing I'm aborting now. You need to make sure that /tmp/.mount_CTemplR0XoE6/chrome-sandbox is owned by root and has mode 4755.`\n\nTry adding `--no-sandbox` when running the AppImage executable.\n\n## Security\n\nCTemplar uses [bcrypt.js](https://github.com/dcodeIO/bcrypt.js) and [OpenPGP.js](https://github.com/openpgpjs/openpgpjs) for hashing and encryption.\n\n### Bug Bounties\n\nPlease, refer to our [official publication](https://ctemplar.com/security) regarding vulnerabilities disclosure and bug bounty questions.\n\n### Hash Password\n\nCTemplar hashes every password before sending it to server for authentication or sign-up purposes.\nA unique salt is created from user's Username which is then used to hash the password using `bcrypt.hashSync(password, salt)` method.\n\n### Encryption\n\nCTemplar encrypts and decrypts contents of every email using user's public/private key pair which is generated during sign up process.\n\n- Public/Private Key pair is generated by `openpgp.generateKey` method using user's plain password as `passphrase`.\n  ```\n  const options = {\n    userIds: [{ name: username, email: 'username@ctemplar.com' }],\n    numBits: 4096,\n    passphrase: password\n  };\n  openpgp.generateKey(options);\n  ```\n- Mail contents are encrypted by `openpgp.encrypt` method using receiver's Public Key.\n  ```\n  const options = {\n      data: content,\n      publicKeys: openpgp.key.readArmored(publicKey).keys\n  };\n  openpgp.encrypt(options);\n  ```\n- Mail contents are decrypted by `openpgp.decrypt` method using user's Private Key.\n\n  ```\n  let decryptedPrivateKey = openpgp.key.readArmored(privateKey).keys[0];\n  decryptedPrivateKey.decrypt(passphrase);\n\n  const options = {\n      message: openpgp.message.readArmored(encryptedContent),\n      privateKeys: [decryptedPrivateKey]\n  };\n  openpgp.decrypt(options);\n  ```\n\n## Transparent build code\n\nWe host our build code publicly on github and we also provide the details on how to match checksum of code on github and the one we serve\non our website. Find the details of build and how to calculate checksum here : [https://github.com/CTemplar/webclient/blob/gh-pages/README.md](https://github.com/CTemplar/webclient/blob/gh-pages/README.md)\n\n## Contribution\n\nThis project is still in early phase so bug reports via Issues and Pull Requests are welcome.\n\n## License\n\nApache License 2.0\n",{}],"uses":{"params":["repo"]}}]}
