{"type":"data","nodes":[null,{"type":"data","data":[{"repoDetails":1,"readme":24,"meta":25},{"id":2,"name":3,"user":4,"url":5,"description":6,"isFork":7,"createdAt":8,"updatedAt":9,"homepage":10,"language":11,"license":12,"size":13,"stars":14,"forks":15,"issues":16,"topics":17,"archived":7,"has_pages":7},37785476,"node-tfl-journey-planner","Lissy93","https://github.com/Lissy93/node-tfl-journey-planner","ðŸš†   A node module for the TFL journey planner",false,"2015-06-20T20:51:31Z","2017-12-30T16:41:49Z","https://www.npmjs.com/package/tfl-journey-planner","LiveScript","",1843,2,0,3,[18,19,20,21,22,23],"api","json","london","tfl","tfl-journey-planner","transport","\n![node-tfl-journey-planner](https://i.imgur.com/dxqiC8j.png)\n\n> A simple Node wrapper for the for fetching real-time journey's from the TFL API\n\n\n[![dependencies Status](https://david-dm.org/lissy93/node-tfl-journey-planner/status.svg)](https://david-dm.org/lissy93/node-tfl-journey-planner)\n[![devDependencies Status](https://david-dm.org/lissy93/node-tfl-journey-planner/dev-status.svg)](https://david-dm.org/lissy93/node-tfl-journey-planner?type=dev)\n[![npm](https://img.shields.io/npm/dy/localeval.svg)](https://www.npmjs.com/package/tfl-journey-planner)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/ddd831ad67604707844a57c4f153c5be)](https://www.codacy.com/app/lissy93/node-tfl-journey-planner?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Lissy93/node-tfl-journey-planner&amp;utm_campaign=Badge_Grade)\n\n\n\n## Install\n```\nnpm install tfl-journey-planner --save\n```\n\n## Usage\n```javascript\ntflJourneyPlanner = require('tfl-journey-planner');\n\n// Specify locations in this format\nlocations = {\n  to: {lat: 51.5002452, lng: 0.0035842},\n  from: {lat: 51.5131652, lng: -0.0905267}\n};\n\noptions = {}; // Specify additional options if you want (see below)\n\ntflJourneyPlanner(locations, options, function(results){\n  console.log(results); // Do awesome stuff with the TFL results!\n});\n```\n\n## Locations\nLocations can either be specified like:\n```javascript\nlocations = {\n  to: {lat: 51.5002452, lng: 0.0035842},\n  from: {lat: 51.5131652, lng: -0.0905267}\n}\n```\n\nor with their text value\n```javascript\nlocations = {\n  to: 'Aldgate East',\n  from: 'London Bridge'\n};\n```\nHowever, using text values will more than likley have many matches, so your response may not be as you'd planned.\n\n\nor with postal codes/ text addresses\n```javascript\nlocations = {\n  to: 'SE18 7PH',\n  from: 'EC3M 3AD'\n};\n```\n\n## Specifying additional options\nThe second param is a JSON object where you can put any of the following (all are optional):\n\n\n| OPTION                  | DEFAULT     | EXPLINATION                                                                                                                                                               |\n|-------------------------|-------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| via                     |             | Travel through (if in coordinate format then must be \"longitude,latitude\")                                                                                      |\n| nationalSearch          | [False]     | Does the journey cover stops outside London? eg. \"nationalSearch=true\"                                                                                          |\n| date                    |             | The date must be in yyyyMMdd format                                                                                                                             |\n| time                    |             | The time must be in HHmm format                                                                                                                                 |\n| timeIs                  | [Departing] | Does the time given relate to arrival or leaving time? Possible options: \"departing\" | \"arriving\"                                                               |\n| journeyPreference       | [LeastTime] | The journey preference eg possible options: \"leastinterchange\" | \"leasttime\" | \"leastwalking\"                                                                   |\n| mode                    |             | The mode must be a comma separated list of modes. eg possible options: \"public-bus,overground,train,tube,coach,dlr,cablecar,tram,river,walking,cycle\"           |\n| accessibilityPreference |             | The accessibility preference must be a comma separated list eg. \"noSolidStairs,noEscalators,noElevators,stepFreeToVehicle,stepFreeToPlatform\"                   |\n| fromName                |             | From name is the location name associated with a from coordinate                                                                                                |\n| toName                  |             | To name is the label location associated with a to coordinate                                                                                                   |\n| viaName                 |             | Via name is the location name associated with a via coordinate.                                                                                                 |\n| maxTransferMinutes      |             | The max walking time in minutes for transfer eg. \"120\"                                                                                                          |\n| maxWalkingMinutes       |             | The max walking time in minutes for journeys eg. \"120\"                                                                                                          |\n| walkingSpeed            | [Average]   | The walking speed. eg possible options: \"slow\" | \"average\" | \"fast\".                                                                                            |\n| cyclePreference         | [None]      | The cycle preference. eg possible options: \"allTheWay\" | \"leaveAtStation\" | \"takeOnTransport\" | \"cycleHire\"                                                     |\n| adjustment              |             | Time adjustment command. eg possible options: \"TripFirst\" | \"TripLast\"                                                                                          |\n| bikeProficiency         |             | A comma separated list of cycling proficiency levels. eg possible options: \"easy,moderate,fast\"                                                                 |\n| alternativeCycle        | [False]     | Option to determine whether to return alternative cycling journey                                                                                               |\n| alternativeWalking      | [True]      | Option to determine whether to return alternative walking journey                                                                                               |\n| applyHtmlMarkup         | [False]     | Flag to determine whether certain text (e.g. walking instructions) should be output with HTML tags or not.                                                      |\n| useMultiModalCall       | [False]     | A boolean to indicate whether or not to return 3 public transport journeys, a bus journey, a cycle hire journey, a personal cycle journey and a walking journey |\n| walkingOptimization     | [False]     | A boolean to indicate whether to optimize journeys using walking                                                                                                |\n\n\n\nSpecify options like this:\n```javascript\noptions = {\n    walkingOptimization: true,\n    bikeProficiency: 'easy',\n    accessibilityPreference: 'noEscalators'\n}\n```\n\n\n\n## Developing\nWritten in [LiveScript](http://livescript.net/), run `npm run build` to build, or `npm run watch` to watch for changes then build\n\n\n\n## Unit Tests\n`npm test`\n\n\n\n## Issues\nReport on [GitHub repo issue page](https://github.com/Lissy93/node-tfl-journey-planner/issues)\n\n\n\n\n\n## Authenticating\nAuthentication is not required any longer or tfl requests.\nIf you do need to authenticate then you can sign up for an API key at https://api-portal.tfl.gov.uk/signup\nCreate a JSON object similar to the one below\n\n```javascript\n    tfl = {\n        appId: 'xxxxxxxx',\n        appKey: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'\n    };\n```\n\n[TFL]:https://api-portal.tfl.gov.uk/signup\n[@lissy_sykes]:http://twitter.com/lissy_sykes\n",{}],"uses":{"params":["repo"]}}]}
