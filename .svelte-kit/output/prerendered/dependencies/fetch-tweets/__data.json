{"type":"data","nodes":[null,{"type":"data","data":[{"repoDetails":1,"readme":17,"meta":18},{"id":2,"name":3,"user":4,"url":5,"description":6,"isFork":7,"createdAt":8,"updatedAt":9,"homepage":10,"language":11,"license":12,"size":13,"stars":14,"forks":15,"issues":15,"topics":16,"archived":7,"has_pages":7},41417175,"fetch-tweets","Lissy93","https://github.com/Lissy93/fetch-tweets"," A node module that fetches tweets from Twitter based on topic, location or timeframe",false,"2015-08-26T09:31:05Z","2017-12-30T16:41:39Z","","JavaScript","NOASSERTION",29,3,2,[],"# fetch-tweets\n> A simple to use, feature-rich, tested node module for fetching Tweets from the Twitter API.\n\n\n### Install \n```npm install fetch-tweets --save```\n\n### Set up\nCreate a new Twitter app [here](https://apps.twitter.com/app/new) to get your consumer key and secret.\n\nInclude the following code in your file. \n\n```javascript\nvar FetchTweets = require('fetch-tweets'); // Include the module\n\n// Specify Twitter keys (preferably in an external .gitignore'd file)\nvar apiKeys = {\n    consumer_key : 'XXXXXXXXXXXXXXXXXXXXXXXXX',\n    consumer_secret : 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'\n};\n\n// Create a new object and pass in keys and optional additional options (see below)\nvar fetchTweets = new FetchTweets(apiKeys); \n```\nThe above code: includes the fetch-tweets module, creates a new instance and passes in your Twitter API keys.\n\n\n## Fetching Tweets by keyword(s)\nThere are two methods of selecting Tweets by keyword, using Twitter search API. \n* Single paramater string containing the search term\n* Single paramater JSON object containing options\n\n### Simple example\n```javascript\nfetchTweets.byTopic('JavaScript', function(results){\n   console.log(results); // Do whatever with the results\n});\n```\nThere are a series query operators that can be used inside this string parameter, such as fetching Tweets containg multiple keywords. \nTo view a list of query operators click here.\n\n### Specifying more options\nYou can also search for Tweets by passing in a JSON object containing options set by the Twitter API. There is an extensive list of options such as dates, locations, languages and popularity. For example:\n\n```javascript\nvar options = {\n  q: 'banana',\n  lang: 'en',\n  result_type: 'popular',\n  count: 5,\n}\n\nfetchTweets.byTopic(options, function(results){\n   console.log(results); // Do whatever with the results\n});\n```\n\nView the full list of what you can pass in as options [here in the Twitter documentation](https://dev.twitter.com/rest/reference/get/search/tweets)\n\n## The Results\nThere are two options for how you'd like your results returned:\n* Formatted Results - just the useful stuff *(default)*\n* Full Results - everything that is returned by the Twitter API\n\n### Formated Results (just the usefull stuff)\nThis is default, so you don't need to do anything different than above\n\nResults will be returned in the following format:\n```javascript\n[\n    {   date: 'Sun Aug 30 15:55:09 +0000 2015',\n        body: 'JavaScript is just so totally awesome',\n        location: { geo: null, coordinates: null, place: null },\n        'retweet-count': 23952,\n        'favorited-count': 0,\n        lang: 'en' },\n    {   date: 'Sun Aug 30 15:55:09 +0000 2015',\n        body: 'Ony one thing more awesome than JavaScript and that's CoffeeScript!!',\n        location: { geo: null, coordinates: null, place: null },\n        'retweet-count': 0,\n        'favorited-count': 0,\n        lang: 'en' },\n    {   date: 'Sun Aug 30 15:55:08 +0000 2015',\n        body: 'And the one thing more awesome than CoffeeScript, Coffee!!!!',\n        location: { geo: null, coordinates: null, place: null },\n        'retweet-count': 0,\n        'favorited-count': 0,\n        lang: 'en'\n    }\n]\n```\n\n\n### Full Results\nIf you would like the full results returned by the Twitter API, then you can specify the second parameter as false when creating the fetchTweets object:\n```javascript\nvar FetchTweets = require('fetch-tweets');\nvar fetchTweets = new FetchTweets(apiKeys, false);\n```\n\nYou can view an example of the format of these results [here, on the Twitter website](https://dev.twitter.com/rest/reference/get/search/tweets)\n\n## Tests\nfetch-tweets uses Mocha, Chai, Sinon and Istanbul to form it's testing environment.\n\nTo run all tests: ```npm test```\n\nSummary of test results will be outputed to the console, more detailed results are generated and saved in the reports directory \n\n## Building\nfetch-tweets uses gulp to prepare all the files\n\nRun ```gulp build``` to build\n\nRun ```gulp test``` to test\n\nRun ```gulp``` To clean directory, build, test, and watch for changes rebuilding when a file is modified\n\n\nLicense\n----\nMIT Â© [Alicia Sykes](http://aliciasykes.com)\n\n\n\n",{}],"uses":{"params":["repo"]}}]}
